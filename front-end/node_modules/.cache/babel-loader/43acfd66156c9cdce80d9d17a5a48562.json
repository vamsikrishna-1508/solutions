{"ast":null,"code":"export function add(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n  return value;\n}\nexport function addIfNotExist(key, value) {\n  const itemInStore = get(key); // add to local storage if not exist\n\n  if (!itemInStore) {\n    return add(key, value);\n  } // return existing one\n\n\n  return itemInStore;\n}\nexport function get(key) {\n  const itemInStore = localStorage.getItem(key);\n  return itemInStore ? JSON.parse(itemInStore) : undefined;\n}\nexport let LocalStorageKey;\n\n(function (LocalStorageKey) {\n  LocalStorageKey[\"students\"] = \"boardingware.students\";\n  LocalStorageKey[\"rolls\"] = \"boardingware.rolls\";\n})(LocalStorageKey || (LocalStorageKey = {}));","map":{"version":3,"sources":["/home/vamsi/Documents/Orah/solutions/front-end/src/shared/helpers/local-storage.ts"],"names":["add","key","value","localStorage","setItem","JSON","stringify","addIfNotExist","itemInStore","get","getItem","parse","undefined","LocalStorageKey"],"mappings":"AAAA,OAAO,SAASA,GAAT,CAAgBC,GAAhB,EAAsCC,KAAtC,EAAgD;AACrDC,EAAAA,YAAY,CAACC,OAAb,CAAqBH,GAArB,EAA0BI,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAA1B;AACA,SAAOA,KAAP;AACD;AAED,OAAO,SAASK,aAAT,CAA0BN,GAA1B,EAAgDC,KAAhD,EAA0D;AAC/D,QAAMM,WAAW,GAAGC,GAAG,CAAIR,GAAJ,CAAvB,CAD+D,CAE/D;;AACA,MAAI,CAACO,WAAL,EAAkB;AAChB,WAAOR,GAAG,CAACC,GAAD,EAAMC,KAAN,CAAV;AACD,GAL8D,CAM/D;;;AACA,SAAOM,WAAP;AACD;AAED,OAAO,SAASC,GAAT,CAAgBR,GAAhB,EAAsC;AAC3C,QAAMO,WAAW,GAAGL,YAAY,CAACO,OAAb,CAAqBT,GAArB,CAApB;AACA,SAAOO,WAAW,GAAIH,IAAI,CAACM,KAAL,CAAWH,WAAX,CAAJ,GAAoCI,SAAtD;AACD;AAED,WAAYC,eAAZ;;WAAYA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;GAAAA,e,KAAAA,e","sourcesContent":["export function add<T>(key: LocalStorageKey, value: T) {\n  localStorage.setItem(key, JSON.stringify(value))\n  return value\n}\n\nexport function addIfNotExist<T>(key: LocalStorageKey, value: T) {\n  const itemInStore = get<T>(key)\n  // add to local storage if not exist\n  if (!itemInStore) {\n    return add(key, value)\n  }\n  // return existing one\n  return itemInStore\n}\n\nexport function get<T>(key: LocalStorageKey) {\n  const itemInStore = localStorage.getItem(key)\n  return itemInStore ? (JSON.parse(itemInStore) as T) : undefined\n}\n\nexport enum LocalStorageKey {\n  students = \"boardingware.students\",\n  rolls = \"boardingware.rolls\",\n}\n"]},"metadata":{},"sourceType":"module"}