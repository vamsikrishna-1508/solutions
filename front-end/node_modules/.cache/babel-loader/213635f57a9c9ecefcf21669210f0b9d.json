{"ast":null,"code":"var _jsxFileName = \"/home/vamsi/Documents/Orah/solutions/front-end/src/staff-app/daily-care/home-board.page.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/ButtonBase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Spacing, BorderRadius, FontWeight } from \"shared/styles/styles\";\nimport { Colors } from \"shared/styles/colors\";\nimport { CenteredContainer } from \"shared/components/centered-container/centered-container.component\";\nimport { useApi } from \"shared/hooks/use-api\";\nimport { StudentListTile } from \"staff-app/components/student-list-tile/student-list-tile.component\";\nimport { ActiveRollOverlay } from \"staff-app/components/active-roll-overlay/active-roll-overlay.component\";\n\nconst buildReport = students => {\n  const result = [{\n    type: \"all\",\n    count: students.length\n  }, {\n    type: \"present\",\n    count: 0\n  }, {\n    type: \"late\",\n    count: 0\n  }, {\n    type: \"absent\",\n    count: 0\n  }];\n  students.forEach(({\n    status\n  }) => {\n    if (status) {\n      const idx = result.findIndex(({\n        type\n      }) => type === status);\n      result[idx].count++;\n    }\n  });\n  return result;\n};\n\nexport const HomeBoardPage = () => {\n  const [isRollMode, setIsRollMode] = useState(false);\n  const [students, setStudents] = useState([]);\n  const [getStudents, data, loadState] = useApi({\n    url: \"get-homeboard-students\"\n  });\n  const [saveStudents] = useApi({\n    url: \"save-roll\"\n  });\n  useEffect(() => {\n    void getStudents();\n  }, [getStudents]);\n  useEffect(() => {\n    if (data) {\n      setStudents(data.students);\n    }\n  }, [data]); //console.log(data)\n\n  const onToolbarAction = (action, value = '') => {\n    if (action === \"roll\") {\n      setIsRollMode(true);\n    } else if (action === \"sort\") {\n      const newStudents = [...students];\n      newStudents.sort(function (a, b) {\n        return a.first_name.localeCompare(b.first_name);\n      });\n      setStudents(newStudents);\n    } else if (action === \"search\") {\n      if (!value && (data === null || data === void 0 ? void 0 : data.students)) {\n        setStudents([...data.students]);\n      } else {\n        const studentData = data === null || data === void 0 ? void 0 : data.students;\n\n        if (students !== undefined) {\n          const filteredStudents = students.filter(student => (student.first_name + student.last_name).toLowerCase().includes(value.toLowerCase()));\n          setStudents(filteredStudents);\n        } else {\n          const filteredStudent = studentData === null || studentData === void 0 ? void 0 : studentData.filter(lstudent => (lstudent.first_name + lstudent.last_name).toLowerCase().includes(value.toLowerCase()));\n          setStudents(filteredStudent);\n        }\n      }\n    } else if (action === \"reset\") {\n      if (data && data.students) {\n        setStudents([...data.students]);\n      }\n    }\n  };\n\n  const onActiveRollAction = action => {\n    if (action === \"exit\") {\n      setIsRollMode(false);\n    } else if (action === \"complete\") {\n      const transformedStudents = students.map(({\n        id,\n        status\n      }) => ({\n        student_id: id,\n        roll_state: status || \"unmark\"\n      }));\n      saveStudents({\n        student_roll_states: transformedStudents\n      });\n      window.location.href = \"http://localhost:3000/staff/activity\";\n    }\n  };\n\n  const handleItemClick = (id, status) => {\n    const updatedStudents = students.map(student => {\n      if (student.id === id) {\n        return { ...student,\n          status\n        };\n      }\n\n      return student;\n    });\n    updatedStudents.sort((a, _b) => a.status === \"late\" ? -1 : 1);\n    updatedStudents.sort((a, _b) => a.status === \"present\" ? -1 : 1);\n    setStudents(updatedStudents);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(S.PageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    onItemClick: onToolbarAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), loadState === \"loading\" && /*#__PURE__*/React.createElement(CenteredContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"spinner\",\n    size: \"2x\",\n    spin: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  })), loadState === \"loaded\" && (data === null || data === void 0 ? void 0 : data.students) && /*#__PURE__*/React.createElement(React.Fragment, null, students.map(s => /*#__PURE__*/React.createElement(StudentListTile, {\n    key: s.id,\n    isRollMode: isRollMode,\n    student: s,\n    onItemClick: status => handleItemClick(s.id, status),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }))), loadState === \"error\" && /*#__PURE__*/React.createElement(CenteredContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Failed to load\"))), /*#__PURE__*/React.createElement(ActiveRollOverlay, {\n    isActive: isRollMode,\n    onItemClick: onActiveRollAction,\n    list: buildReport(students),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Toolbar = props => {\n  const [showInput, setShowInput] = useState(false);\n  const {\n    onItemClick\n  } = props;\n  return /*#__PURE__*/React.createElement(S.ToolbarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => onItemClick(\"sort\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, \"First Name\"), showInput ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    style: cancelInput,\n    type: \"text\",\n    onChange: e => onItemClick(\"search\", e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    style: cancelSearch,\n    className: \"fas fa-times\",\n    onClick: () => {\n      onItemClick(\"reset\");\n      setShowInput(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => setShowInput(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(S.Button, {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => onItemClick(\"roll\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, \"Start Roll\"));\n};\n\nconst cancelSearch = {\n  cursor: 'pointer',\n  position: 'relative',\n  right: '55px'\n};\nconst cancelInput = {\n  position: 'relative',\n  left: '70px'\n};\nconst S = {\n  PageContainer: styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 50%;\n    margin: ${Spacing.u4} auto 140px;\n  `,\n  ToolbarContainer: styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: #fff;\n    background-color: ${Colors.blue.base};\n    padding: 6px 14px;\n    font-weight: ${FontWeight.strong};\n    border-radius: ${BorderRadius.default};\n  `,\n  Button: styled(Button)`\n    && {\n      padding: ${Spacing.u2};\n      font-weight: ${FontWeight.strong};\n      border-radius: ${BorderRadius.default};\n    }\n  `\n};","map":{"version":3,"sources":["/home/vamsi/Documents/Orah/solutions/front-end/src/staff-app/daily-care/home-board.page.tsx"],"names":["React","useState","useEffect","styled","Button","FontAwesomeIcon","Spacing","BorderRadius","FontWeight","Colors","CenteredContainer","useApi","StudentListTile","ActiveRollOverlay","buildReport","students","result","type","count","length","forEach","status","idx","findIndex","HomeBoardPage","isRollMode","setIsRollMode","setStudents","getStudents","data","loadState","url","saveStudents","onToolbarAction","action","value","newStudents","sort","a","b","first_name","localeCompare","studentData","undefined","filteredStudents","filter","student","last_name","toLowerCase","includes","filteredStudent","lstudent","onActiveRollAction","transformedStudents","map","id","student_id","roll_state","student_roll_states","window","location","href","handleItemClick","updatedStudents","_b","s","Toolbar","props","showInput","setShowInput","onItemClick","cursor","cancelInput","e","target","cancelSearch","position","right","left","S","PageContainer","div","u4","ToolbarContainer","blue","base","strong","default","u2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\"\nimport Button from \"@material-ui/core/ButtonBase\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Spacing, BorderRadius, FontWeight } from \"shared/styles/styles\"\nimport { Colors } from \"shared/styles/colors\"\nimport { CenteredContainer } from \"shared/components/centered-container/centered-container.component\"\nimport { Person } from \"shared/models/person\"\nimport { useApi } from \"shared/hooks/use-api\"\nimport { StudentListTile } from \"staff-app/components/student-list-tile/student-list-tile.component\"\nimport { ActiveRollOverlay, ActiveRollAction } from \"staff-app/components/active-roll-overlay/active-roll-overlay.component\";\nimport { StateList } from \"staff-app/components/roll-state/roll-state-list.component\"\n\nconst buildReport = (students: Person[]) => {\n  const result: StateList[] = [\n    { type: \"all\", count: students.length },\n    { type: \"present\", count: 0 },\n    { type: \"late\", count: 0 },\n    { type: \"absent\", count: 0 },\n  ];\n  students.forEach(({ status }) => {\n    if (status) {\n      const idx = result.findIndex(({ type }) => type === status);\n      result[idx].count++;\n    }\n  });\n  return result;\n};\n\nexport const HomeBoardPage: React.FC = () => {\n  const [isRollMode, setIsRollMode] = useState(false);\n  const [students, setStudents] = useState<Person[]>([]);\n  const [getStudents, data, loadState] = useApi<{ students: Person[] }>({ url: \"get-homeboard-students\" });\n\n  const [ saveStudents ] = useApi<{ students: Person[] }>({ url: \"save-roll\" });\n\n\n  useEffect(() => {\n    void getStudents()\n  }, [getStudents]);\n\n  useEffect(() => {\n    if (data) {\n      setStudents(data.students);\n    }\n  }, [data]);\n\n  //console.log(data)\n\n  const onToolbarAction = (action: ToolbarAction, value = '') => {\n    if (action === \"roll\") {\n      setIsRollMode(true)\n    } else if (action === \"sort\") {\n      const newStudents = [...students];\n      newStudents.sort(function (a, b) {\n        return a.first_name.localeCompare(b.first_name);\n      });\n      setStudents(newStudents)\n    } else if (action === \"search\") {\n      if (!value && data?.students) {\n        setStudents([...data.students]);\n      } else {\n        const studentData = data?.students;\n        if(students !== undefined){\n          const filteredStudents = students.filter(\n            student => (student.first_name+student.last_name).toLowerCase().includes(value.toLowerCase())\n          );\n          setStudents(filteredStudents);\n        }else {\n          const filteredStudent:any = studentData?.filter(\n            lstudent => (lstudent.first_name+lstudent.last_name).toLowerCase().includes(value.toLowerCase())\n          );\n          setStudents(filteredStudent);\n        }\n      }\n    } else if (action === \"reset\") {\n      if (data && data.students) {\n        setStudents([...data.students]);\n      } \n    }\n  }\n\n  const onActiveRollAction = (action: ActiveRollAction) => {\n    if (action === \"exit\") {\n      setIsRollMode(false);\n    } else if (action === \"complete\") {\n      const transformedStudents = students.map(({ id, status }) => ({\n        student_id: id,\n        roll_state: status || \"unmark\"\n      }));\n      saveStudents({\n        student_roll_states: transformedStudents\n      });\n      window.location.href = \"http://localhost:3000/staff/activity\";\n    }\n  }\n\n  const handleItemClick = (id: number, status: string) => {\n    const updatedStudents = students.map(student => {\n      if (student.id === id) {\n        return { ...student, status}\n      }\n      return student;\n    });\n    updatedStudents.sort((a, _b) => a.status === \"late\" ? -1 : 1);\n    updatedStudents.sort((a, _b) => a.status === \"present\" ? -1 : 1);\n    setStudents(updatedStudents);\n  };\n\n  return (\n    <>\n      <S.PageContainer>\n        <Toolbar onItemClick={onToolbarAction} />\n\n        {loadState === \"loading\" && (\n          <CenteredContainer>\n            <FontAwesomeIcon icon=\"spinner\" size=\"2x\" spin />\n          </CenteredContainer>\n        )}\n\n        {loadState === \"loaded\" && data?.students && (\n          <>\n            {students.map((s) => (\n              <StudentListTile key={s.id} isRollMode={isRollMode} student={s} onItemClick={(status: string) =>handleItemClick(s.id, status)} />\n            ))}\n          </>\n        )}\n\n        {loadState === \"error\" && (\n          <CenteredContainer>\n            <div>Failed to load</div>\n          </CenteredContainer>\n        )}\n      </S.PageContainer>\n      <ActiveRollOverlay isActive={isRollMode} onItemClick={onActiveRollAction} list={buildReport(students)} />\n    </>\n  )\n}\n\ntype ToolbarAction = \"roll\" | \"sort\" | \"search\" | \"reset\";\ninterface ToolbarProps {\n  onItemClick: (action: ToolbarAction, value?: string) => void\n}\nconst Toolbar: React.FC<ToolbarProps> = (props) => {\n  const [showInput, setShowInput] = useState<boolean>(false);\n  const { onItemClick } = props;\n\n\n  return (\n    <S.ToolbarContainer>\n      <div style={{cursor : 'pointer'}} onClick={() => onItemClick(\"sort\")}>First Name</div>\n      {showInput\n        ?\n        <>\n          <input style = {cancelInput} type=\"text\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => onItemClick(\"search\", e.target.value)} />\n          <i style = {cancelSearch} className=\"fas fa-times\" onClick={() => {\n            onItemClick(\"reset\");\n            setShowInput(false);\n          }}/>\n        </>\n        :\n        <div style={{cursor : 'pointer'}} onClick={() => setShowInput(true)}>Search</div>\n      }\n      <S.Button style={{cursor : 'pointer'}} onClick={() => onItemClick(\"roll\")}>Start Roll</S.Button>\n    </S.ToolbarContainer>\n  )\n}\n\nconst cancelSearch:any = {\ncursor: 'pointer',\nposition: 'relative',\nright: '55px'\n}\n\nconst cancelInput:any = {\n  position: 'relative',\n  left: '70px'\n  }\n\nconst S = {\n  PageContainer: styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 50%;\n    margin: ${Spacing.u4} auto 140px;\n  `,\n  ToolbarContainer: styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: #fff;\n    background-color: ${Colors.blue.base};\n    padding: 6px 14px;\n    font-weight: ${FontWeight.strong};\n    border-radius: ${BorderRadius.default};\n  `,\n  Button: styled(Button)`\n    && {\n      padding: ${Spacing.u2};\n      font-weight: ${FontWeight.strong};\n      border-radius: ${BorderRadius.default};\n    }\n  `,\n}\n"]},"metadata":{},"sourceType":"module"}