{"ast":null,"code":"var _jsxFileName = \"/home/vamsi/Documents/Orah/solutions/front-end/src/staff-app/components/roll-state/roll-state-switcher.component.tsx\";\nimport React, { useState } from \"react\";\nimport { RollStateIcon } from \"staff-app/components/roll-state/roll-state-icon.component\";\nexport const RollStateSwitcher = ({\n  initialState = \"unmark\",\n  size = 40,\n  onStateChange\n}) => {\n  const [rollState, setRollState] = useState(initialState);\n\n  const nextState = () => {\n    const states = [\"present\", \"late\", \"absent\"];\n    if (rollState === \"unmark\" || rollState === \"absent\") return states[0];\n    const matchingIndex = states.findIndex(s => s === rollState);\n    return matchingIndex > -1 ? states[matchingIndex + 1] : states[0];\n  };\n\n  const onClick = () => {\n    const next = nextState();\n    setRollState(next);\n\n    if (onStateChange) {\n      onStateChange(next);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(RollStateIcon, {\n    type: rollState,\n    size: size,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  });\n};","map":{"version":3,"sources":["/home/vamsi/Documents/Orah/solutions/front-end/src/staff-app/components/roll-state/roll-state-switcher.component.tsx"],"names":["React","useState","RollStateIcon","RollStateSwitcher","initialState","size","onStateChange","rollState","setRollState","nextState","states","matchingIndex","findIndex","s","onClick","next"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,aAAT,QAA8B,2DAA9B;AAOA,OAAO,MAAMC,iBAAkC,GAAG,CAAC;AAAEC,EAAAA,YAAY,GAAG,QAAjB;AAA2BC,EAAAA,IAAI,GAAG,EAAlC;AAAsCC,EAAAA;AAAtC,CAAD,KAA2D;AAC3G,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAACG,YAAD,CAA1C;;AAEA,QAAMK,SAAS,GAAG,MAAM;AACtB,UAAMC,MAAwB,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,QAApB,CAAjC;AACA,QAAIH,SAAS,KAAK,QAAd,IAA0BA,SAAS,KAAK,QAA5C,EAAsD,OAAOG,MAAM,CAAC,CAAD,CAAb;AACtD,UAAMC,aAAa,GAAGD,MAAM,CAACE,SAAP,CAAkBC,CAAD,IAAOA,CAAC,KAAKN,SAA9B,CAAtB;AACA,WAAOI,aAAa,GAAG,CAAC,CAAjB,GAAqBD,MAAM,CAACC,aAAa,GAAG,CAAjB,CAA3B,GAAiDD,MAAM,CAAC,CAAD,CAA9D;AACD,GALD;;AAOA,QAAMI,OAAO,GAAG,MAAM;AACpB,UAAMC,IAAI,GAAGN,SAAS,EAAtB;AACAD,IAAAA,YAAY,CAACO,IAAD,CAAZ;;AACA,QAAIT,aAAJ,EAAmB;AACjBA,MAAAA,aAAa,CAACS,IAAD,CAAb;AACD;AACF,GAND;;AAQA,sBAAO,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAER,SAArB;AAAgC,IAAA,IAAI,EAAEF,IAAtC;AAA4C,IAAA,OAAO,EAAES,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAnBM","sourcesContent":["import React, { useState } from \"react\"\nimport { RolllStateType } from \"shared/models/roll\"\nimport { RollStateIcon } from \"staff-app/components/roll-state/roll-state-icon.component\"\n\ninterface Props {\n  initialState?: RolllStateType\n  size?: number\n  onStateChange?: (newState: RolllStateType) => void\n}\nexport const RollStateSwitcher: React.FC<Props> = ({ initialState = \"unmark\", size = 40, onStateChange }) => {\n  const [rollState, setRollState] = useState(initialState)\n\n  const nextState = () => {\n    const states: RolllStateType[] = [\"present\", \"late\", \"absent\"]\n    if (rollState === \"unmark\" || rollState === \"absent\") return states[0]\n    const matchingIndex = states.findIndex((s) => s === rollState)\n    return matchingIndex > -1 ? states[matchingIndex + 1] : states[0]\n  }\n\n  const onClick = () => {\n    const next = nextState()\n    setRollState(next)\n    if (onStateChange) {\n      onStateChange(next)\n    }\n  }\n\n  return <RollStateIcon type={rollState} size={size} onClick={onClick} />\n}\n"]},"metadata":{},"sourceType":"module"}